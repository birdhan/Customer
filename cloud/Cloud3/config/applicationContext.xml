<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/aop      
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd 
						http://www.springframework.org/schema/context
           				http://www.springframework.org/schema/context/spring-context-3.0.xsd						     
						http://www.springframework.org/schema/tx      
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- 扫描component -->
    <context:component-scan base-package="com"/>
	<tx:annotation-driven transaction-manager="transactionManager"/>
	    
	<!-- 系统所有配置属性 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/config-*.properties</value>
			</list>
		</property>
	</bean>

	<!-- mybatis的sessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis_config.xml"/>
		<!-- <property name="mapperLocations" value="classpath:com/cloud/demo/config/*_sqlmap.xml" /> -->
	</bean>
	
	<!-- hibernate的sessionFactory -->
	<bean id="hibernateSessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		
		<!-- hibernate的拦截器 ，如果配置此项，每操作数据都会进入拦截器内部
		<property name="entityInterceptor">    
            <ref bean="queryResInterceptor"/>  
        </property> -->
		
		<!-- 加载hibernate配置文件 -->
		<property name="configLocation">
			<value>classpath:/hibernate.cfg.xml</value>
		</property> 
		
		<!-- 扫描各模块model包 -->		
		<property name="packagesToScan">
			<value>com./**/.*.model</value>
		</property>
	</bean>
	
	<!-- hibernate拦截器装置 -->
	<bean id="queryResInterceptor" class="com.cloud.base.jdbchibernate.MyHibernateInterceptor"/>
	
	<!-- 扫描所有dao层接口，免DAO层实现类。 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
  		<property name="basePackage" value="com.*./**/*.dao" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  		<property name="dataSource" ref="dataSource" />
	</bean>	
	
	<bean id="transactionManager4Hibernate" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
  		<property name="sessionFactory">
			<ref bean="hibernateSessionFactory" />
		</property>
	</bean>	
	
	<!-- 配置事物切面Bean -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="modify*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="submit*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="link*" propagation="REQUIRED" rollback-for="Exception"/>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 配置一个切入点，匹配指定包下所有以Impl结尾的类 -->
	<!--
		由于Spring注入的是接口，关联的是实现类。在Spring的配置文件加上下面代码，注明可以用实现类注入 <aop:config
		proxy-target-class=“true”></aop:config>
	-->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="idealPointcut" expression="execution(* com.*.*.service.*.* (..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="idealPointcut" />
	</aop:config>

	<!-- 加载SpringContextHolder类 -->
	<bean id="springContextHolder" class="com.cloud.base.util.SpringContextHolder" />
	
	<!-- 加载数据源 -->
	<import resource="classpath:/applicationContext-database.xml"/>
	
	<!-- 加载spring security -->
	<import resource="classpath:/applicationContext-security.xml"/>
	
	<!-- 加载所有模块的spring配置文件 -->
	<import resource="classpath:/applicationContext-allApp.xml"/>
</beans>